export const FAQ_DATA = [
  {
    question: `How does Algoforces test whether my solution is correct or not?`,
    answer: `● Your code is tested by a computer automatically, not by a human being, and you have to write your code accordingly.
  
    ● For each problem, Algoforces will have one or more input files, each according to the specifications mentioned in the problem statement, and corresponding correct output files. Algoforces will run your program on each of the input files by redirecting the standard input stream to an input file, and the standard output stream to another file. The output generated by your program must match the correct output exactly in order to be judged correct.
      
      Some consequences of this:
      
      ➡️ If your program starts by printing ‘Enter the number’ and the problem does not tell you to do so, then since this is not part of the correct output, you will be never be judged correct regardless of what the rest of your program does.
      
      ➡️ As all that matters is that the output files match, it makes no difference at all at what point in your program’s execution that this output is written. So there is no need to read all of the input before starting output; it is much more common to just print out each result as you are reading through the input.
      
      ➡️ If you use any method other than using the standard input and output streams - for example, using command line arguments, reading from a file, opening up some sort of dialog box, or otherwise - you will never be judged correct`,
  },
  {
    question: `How does the time limit work?`,
    answer: `● Your program must read, process, and output the result for an input file within the specified time limit. An input file can contain a single test case or multiple test cases depending on the problem setter’s discretion. A test case will be of the format mentioned in the problem statement.

    ● This means, if the input file contains multiple test cases, your code must complete ALL of these within time limit specified. If the time limit is 2 seconds, and there are 1000 test cases, your program shouldn’t be taking 2 second per test case - it needs to run all 1000 cases in under 2 seconds.
    
    ● There can be multiple input test files too, each containing single or multiple test cases. The time limit is applied to each test file. That means If the time limit is 2 seconds, and there are 5 test files, your program could take upto 10 seconds to execute - it needs to run all 5 test files in under 10 seconds. However, it is to be noted, that the number of test files is not mentioned anywhere and is agnostic to the user.`,
  },
  {
    question: `Why do I get a Time Limit Exceeded?`,
    answer: `● To understand Time Limit Exceeded(TLE), understanding how the online judge works will help. The online judge allocates resources like memory and CPU for evaluating every submission. However, to ensure that your submission does not keep running for an infinite time, the online judge has to stop your submission from running after a particular time period. This time period is actually decided by the problem setter and is given as one of the inputs to the online judge. Once the submission program runs for time period the judge system issues a system kill command to the program execution and assigns TLE result to the submission.

    ● The most common reason that you would get a TLE is because your program is too slow. If a problem tells you that N <= 100000, and your program has nested loops each which go up to N, your program will never be fast enough. Read the bounds in the input carefully before writing your program, and try to figure out which inputs will cause your program to run the slowest.
    
    ● The second most common cause of TLE is that your method of reading input and writing output is too slow. In Java, do not use a Scanner; use a BufferedReader instead. In C++, do not use cin/cout - use scanf and printf instead.
    
    ● In Python, you could try speeding up your solutions by adding the following two lines to the start of your file:
    
    "import psyco
    psyco.full()"

    ● To see if your method of reading input is fast enough, try solving the Enormous Input Test problem. If you get time limit exceeded, try another method of reading input.
    
    ● Finally, you may have tested your code on all sorts of large inputs and are sure your code will run inside the time limit. However, Algoforces' judge may be slower than your computer. It is common for a program to take 2-3 times as long on Algoforces as it does on your computer. The time limits are all attainable(tested by our problem tester), so you will just need to come up with a way of making your algorithm
    
    `
  },
  {
    question: `Why do I get Wrong Answer?`,
    answer: `● Wrong answer means simply that - your program is not printing out the correct answer. You will just have to debug your program very carefully! Make sure your program is conforming exactly to the output format required, and not printing out unnecessary information.`
  },
  {
    question: `Why do i get a compile error?`,
    answer: `There are a few reasons why your code may compile on your computer but not on Algoforces. Make sure compiler versions are same. Belowe are the compiler versions used by Algoforces.
    ➤ C++ = GCC 11.1.0
    ➤ Java = JDK 17.0.1
    ➤ Python = Py 3.9.9
    `
  }
];
